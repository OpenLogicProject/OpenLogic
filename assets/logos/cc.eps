%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.2%%For: (Alex Roberts) ()%%Title: (cc.eps)%%CreationDate: 5/2/08 10:36 AM%%BoundingBox: 289 305 345 361%%HiResBoundingBox: 289.5283 305.4014 344.48 360.353%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_Cropmarks: 284 299.457 350 365.457%AI3_TemplateBox: 400 300 400 300%AI3_TileBox: 111.5 -55.5 687.5 678.5%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 14400 14400%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 196.2319 401.7681 5.8562 1166 673 18 1 0 73 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-66.3003 -266.2988%AI7_GridSettings: 48 8 48 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp5 Bn%AI5_BeginGradient: (Gray Linear Gradient)(Gray Linear Gradient) 0 7 Bd[<0A0B0C0D0D0E10111213131415161717191A1B1B1C1D1F202122232425262728292A2B2C2D2E2E2F31323435363738393A3B3C3D3E3F41424344454648494A4B4C4D4E5051525354555758595A5C5D5E60616364656668696A6B6C><070809090A0B0B0C0D0C0D0E0F1010121112131314151617161718191A1B1C1D1D1E1E1E1F20222324252627262728292A2B2C2D2E2F3031303132333435363738393A3B3C3C3C3D3E3F41424344454647484A494A4B4D4E4F5051><0607070809090A0A0B0C0D0E0D0E0F0F111211121314141516161718191A1B1A1B1C1D1E1F201F20212223242625262728292A2B2C2B2C2D2F303031323233343536373839393A3B3C3D3E3F403F404142444547484948494A4B4C><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101><F1F0EFEEEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A><F1F0EFEFEEEDECEBEAEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDDDCDBDAD9D8D7D6D5D4D4D3D2D1D0CFCECDCCCBCBCAC9C8C7C6C5C4C3C2C1C0C0BFBEBDBCBBBAB9B8B7B6B5B4B4B3B2B1B0AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A0><F2F1F1F0EFEEEDEDECEBEAE9E9E8E7E6E5E4E4E3E2E1E0DFDFDEDDDCDBDAD9D9D8D7D6D5D4D3D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B8B7B6B5B4B3B2B1B1B0AFAEADACABAAA9A9A8A7A6A5>4 %_Br<1A1918171615141211100E0D0C0B0A><11100F0E0D0D0C0C0C0B0B0A090807><1111100F0E0D0C0B0B0A0909080706>0<E2E3E4E5E6E7E8EAEBECEDEEEFF0F1><E4E5E6E7E8E9EAEBEBECEDEEEFF0F1><E5E6E7E8E9EAEBECECEDEEEFF0F1F2>4 %_Br<54535251504F4E4C4B4A4948474644434241403F3E3D3C3B393836353432312F2E2D2C2B2A292827262524232221201F1E1D1C1B1A><3C3B3A3938373635343433323130302F2E2D2C2B2A2928272625252524232221201F1E1D1C1C1B1A19181717171615141413121111><3D3C3C3B3A39383837363534333230302F2E2D2C2D2C2B2A29282725242322212021201F1E1D1C1B1B1A1918161616151514131211>0<ADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2><B3B4B5B6B7B8B9BABBBBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDCDDDEDFE0E1E2E3E4><B5B6B7B8B9BABBBBBCBDBEBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCDCECFD0D1D2D3D3D4D5D6D7D8D9DADBDCDDDEDFDFE0E1E2E3E4E5>4 %_Br<000000000000000000000000000000010101020202030303040405050505050606060707080809090A0A0A0A0B0C0C0D0D0E0E101011121213141415141617171819191A1B1B1C1D1E1E1F202121222324242526272728292A2B2B2C2D2E2F303132333536373838393A3C3D3E3F404142434345464748494A4B4C4E4F5051525354><0000000000000000000000000000000100000001010102020102020203020303030404050405050505050606070608070908090A0A0B0A0C0B0C0C0D0E0D0E0E0F101011111112131214141415161617171718191A1A1B1C1D1C1D1E1F1F1F20222122232526252628292A2A2A2B2C2D2E2F302F30313233343536363738393A3B3C><00000000000000000000000000000000000001010101020202020202030302030304040405040505060607070708070908090A0A0B0B0C0B0D0C0E0D0E100F101011121112141314141515161617171819191A1B1B1B1C1D1C1E1F201F21222222242526252628292A292A2B2D2E2F2E2F30303233333435363737393A3A3B3C3C3D>0<FFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFBFAFAFAF9F9F8F8F8F7F7F6F6F6F5F5F4F4F3F3F2F2F1F1F0EFEFEEEEEDEDECECEBEAEAE9E8E8E7E7E6E5E5E4E3E3E2E1E1E0DFDEDEDDDCDBDBDAD9D8D8D7D6D5D5D4D3D2D1D1D0CFCECDCCCCCBCAC9C8C7C6C6C5C4C3C2C1C0BFBEBDBCBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEAD><FFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFCFBFBFBFAFAFAF9F9F9F8F8F7F7F7F6F6F5F5F4F4F4F3F3F2F2F1F1F0F0EFEFEEEDEDECECEBEBEAEAE9E8E8E7E7E6E5E5E4E3E3E2E1E1E0DFDFDEDDDDDCDBDBDAD9D8D8D7D6D5D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C7C6C6C5C4C3C2C1C0C0BFBEBDBCBBBAB9B9B8B7B6B5B4B3><FFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F6F6F6F5F5F4F4F3F3F2F2F1F1F1F0F0EFEEEEEDEDECECEBEBEAEAE9E8E8E7E7E6E5E5E4E3E3E2E2E1E0E0DFDEDEDDDCDCDBDAD9D9D8D7D7D6D5D4D4D3D2D1D1D0CFCECECDCCCBCACAC9C8C7C6C5C5C4C3C2C1C0C0BFBEBDBCBBBAB9B9B8B7B6B5>4 %_Br<0A0A090908080706050504030201000000><0707070605050504030302020100000000><0606050505040403020202020100000000>0<F1F1F2F3F4F4F5F6F7F8F9FAFBFCFDFEFF><F1F1F2F3F4F4F5F6F7F8F9FAFBFCFDFEFF><F2F2F3F4F4F5F6F7F8F9F9FAFBFCFDFEFF>4 %_Br<1717161615151414131312121111100F0F0E0D0C0B0B0A><16161515141313121111110F0E0D0E0D0C0B0A0A090807><1717161415141312111111100F0E0D0C0B0A0A08070706>0<E5E5E6E6E7E7E8E8E9E9EAEAEBEBECEDEDEEEEEFF0F0F1><E1E1E2E2E3E4E4E5E6E6E7E8E9EAEAEBECEDEEEEEFF0F1><DFDFE0E1E1E2E3E4E5E5E6E7E8E9EAEBECEDEEEFF0F1F2>4 %_Br[0.423529 0.317647 0.298039 0.003922 0.603922 0.627451 0.647059 2 87 91.573 %_BS%_0.423529 0.317647 0.298039 0.003922 0.603922 0.627451 0.647059 2 87 91.573 Bs0.039216 0.027451 0.023529 0 0.945098 0.945098 0.94902 2 51.3513 49.4382 %_BS%_0.039216 0.027451 0.023529 0 0.945098 0.945098 0.94902 2 51.3513 49.4382 Bs0.101961 0.066667 0.066667 0 0.886275 0.894118 0.898039 2 50 33.1461 %_BS%_0.101961 0.066667 0.066667 0 0.886275 0.894118 0.898039 2 50 33.1461 Bs0.329412 0.235294 0.239216 0 0.678431 0.701961 0.709804 2 50 17.4157 %_BS%_0.329412 0.235294 0.239216 0 0.678431 0.701961 0.709804 2 50 17.4157 Bs0 0 0 0 1 1 1 2 64.5161 0.005 %_BS%_0 0 0 0 1 1 1 2 64.5161 0 Bs0.039216 0.027451 0.023529 0 0.945098 0.945098 0.94902 2 56.1798 0.0025 %_BS%_0.039216 0.027451 0.023529 0 0.945098 0.945098 0.94902 2 56.1798 0 Bs0.090196 0.086275 0.090196 0 0.898039 0.882353 0.87451 2 56.1798 0 %_BS%_0.090196 0.086275 0.090196 0 0.898039 0.882353 0.87451 2 56.1798 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient 1)(Linear Gradient 1) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple Radial Gradient)(Purple Radial Gradient) 1 3 Bd[<000000010202030304050505060707070809090A0A0C0D0D0E0F0F0F1011121313131516161617181A1A1B1C1C1C1D1F202020212223252526272828292A2B2D2D2E2F3031313233343535373839393A3B3C3D3D3E3F404141434445464647484A4B4B4D4E4F505152535455555758><0000000102020303040405060708090A0A0B0D0E0F101112131415161718191A1B1C1B1C1D1E1F202022232325262728292A2B2C2D2E2F3032333435363738393A3B3C3D3E3F4041424345464748494A4B4C4D4E4F5051525354555657595A5B5C5E6061626364666768696A6B6D6E><000000000000000000010001000101010101010102010202020202020102010202020303030203020303030403030303040404030403040404040404040404050505050505040506050605050405050505050605050605060506050506050605050606070607060708070807070607>0<FFFEFEFDFCFBFBFAF9F8F8F7F6F5F5F4F3F2F2F1F0EFEEEEEDECEBEBEAE9E8E7E7E6E5E4E4E3E2E1E0E0DFDEDDDDDCDBDAD9D9D8D7D6D5D5D4D3D2D2D1D0CFCECECDCCCBCACAC9C8C7C6C6C5C4C3C3C2C1C0BFBFBEBDBCBBBBBAB9B8B7B7B6B5B4B3B3B2B1B0AFAFAEADACABABAAA9><FFFEFDFCFBFAF9F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493><FFFEFEFDFDFCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F4F3F2F2F1F1F0F0EFEFEEEDEDECECEBEBEAEAE9E8E8E7E7E6E6E5E4E4E3E3E2E2E1E0E0DFDFDEDEDDDDDCDBDBDADAD9D9D8D7D7D6D6D5D5D4D3D3D2D2D1D1D0CFCFCECECDCDCCCBCBCACAC9C8C8C7C7C6C6C5C4C4C3C3C2C2C1>4 %_Br<5858585959595A5B5B5C5C5D5D5D5E5E606061616262636365656666676769696A6A6B6C6D6D6F7070717173737476767777797A7A7C7C7D7E7F80808183838485868788898A8A8C8D8E8F9091929494959797999A9B9C9E9F9FA1A2A2A4A5A5A7A9A9AAACADADAEB0B0B2B3B4B4B6B7B9B9BABCBCBEBFC1C1C2C4C5C5C7C8C9CACBCDCECECFD0><6E6E6F6F6F7070717173737474767577787879797B7D7C7E7F7F80828283848486878788898B8B8C8E8F8F909294939596989A999B9D9EA09FA1A2A4A5A5A7A8AAABADACAEAFB1B3B4B5B5B6B8B9BBBCBEBFC1C1C2C4C5C7C8CACBCCCECECFD1D2D3D5D6D7D9DADCDDDFE0E1E3E3E4E6E7E8EAEBECEEEFF1F2F4F5F6F8F9FBFCFEFFFFFFFFFFFF><07070608080707070706080707080807080808080708080908080807090809090A09090A090A0A0B0A0B0B0C0A0B0B0C0B0C0A0D0B0C0B0C0C0D0C0C0B0D0C0D0C0D0E0E0F0E0F0E0F0D100F0F1110111011101213121312131213141315141516151615161516171617171819191A1B1A1B1B1C1D1C1D1C1E1F1E202120212322242325262628><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010202020202020202020303030404040504050405060506060607070707070809090B><A9A9A9A8A8A8A7A7A7A6A6A5A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A99999897979696959594939392929190908F8F8E8D8D8C8C8B8A8A8988888786868585848383828181807F7F7E7D7D7C7B7B7A79787877767675747473727271706F6F6E6D6D6C6B6A6A696867676665656463626261605F5F5E5D5C5C5B5A59595857><9393929292919190908F8F8E8E8D8D8C8B8B8A8A8988888786868584848382828180807F7E7D7D7C7B7A7A7978777776757473737271706F6F6E6D6C6B6B6A6968676666656463626160605F5E5D5C5B5A59585857565554535251504F4F4E4D4C4B4A49484746454443424140403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827><C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B6B6B5B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A4A4A3A3A2A2A1A1A0A09F9E9E9D9D9C9C9B9A9A99999898979696959594939392929191908F8F8E8E8D8C8C8B8A8A898988878786868584848382828180807F7F7E7D7D7C>4 %_Br[0 0 0 0 1 1 1 2 50.7937 0 %_BS%_0 0 0 0 1 1 1 2 50.7937 0 Bs0.345098 0.431373 0.027451 0 0.662745 0.576471 0.756863 2 57.3913 35.955 %_BS%_0.345098 0.431373 0.027451 0 0.662745 0.576471 0.756863 2 57.3913 35.955 Bs0.815686 1 0.156863 0.043137 0.341176 0.152941 0.486275 2 51.0204 100 %_BS%_0.815686 1 0.156863 0.043137 0.341176 0.152941 0.486275 2 51.0204 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 1)(Radial Gradient 1) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[1 0 50 0 %_BS%_1 0 50 0 Bs0 0 50 100 %_BS%_0 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Red Linear Gradient)(Red Linear Gradient) 0 6 Bd[<3A39393838373736353534333332313130302F2E2E2D2C2B2B2A2928272726252423222120201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080605040302><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFDFDFD><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFDFDFCFCF9F9F9F8><2A2928272624232221201F1E1D1C1C1B1A19181716151413121110100F0E0D0C0C0A0A0908070606050505040404040303030202020201010101010101010100000000><A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><141414141415151515151515151616161616161616171717171717171718181818181818181819191919191919191A1A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C><1A1A1A1A1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020212121212121212222222222222223232323232324242424>4 %_Br<23242526272728292A2B2B2C2D2E2E2F303131323333343535363737383839393A>11<0B0C0C0D0E0F10101112131415161718191B1C1C1D1E1F2021222324262728292A><CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB8B7B6B5B4B3B2B1B0AFAEADACABAAA9><181818181817171717171717171616161616161616151515151515151514141414><1F1F1F1F1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A>4 %_Br<0909090A0A0A0A0B0B0B0B0B0C0C0C0B0B0C0C0C0C0C0D0D0C0C0E0E0E0D0D0E0E0E0E0E0F0F0F0F0F101010101011111111111211111111121212131314141414141515151514161615151515171717161618181818181719191918181A1A1A1A1A1A1B1B1B1A1A1B1B1B1A1A1A1B1B1B1A1A1A1B1B1B1B1B1B1C1C1C1B1B1C1C1C1D1D1C1C1E1D1D1D1D1D1E1E1E1E1E1D1D1E1E1E1D1D1D1D1E1E1E1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F2020201F1F1F1F1F202020202020202021212121202020202121212121212121212122222222222222222222232323232323232323232323232323232323232323232323><3E3F414243454647484A4B4C4D4E5051525354565758595B5C5D5D5E5F616263656668696A6B6D6E6F7071737374757678797B7C7D7F80828183848687898A8C8D8D8F90929395969799999A9C9D9E9FA1A0A1A3A4A5A7A8A8A9ABACADAEAEB0B1B2B4B5B5B6B7B9BABABBBCBDBFBEC0C1C2C3C3C4C6C7C7C8C9CACACBCCCDCECECFD0D1D1D2D3D3D4D5D6D6D7D8D9D9DBDCDCDDDEDEDFE0E0E1E2E3E3E4E5E5E5E6E6E7E7E8E9E9EAEBEBECECEDEDEDEEEFEFF0F0F1F2F2F3F3F4F4F5F6F6F7F7F8F8F9F9FAFAFAFBFBFCFCFDFDFDFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><1F1F20212223242526272829292A292A2B2C2C2D2E2F2F303132343536373537373839393B3B3C3D3E3F3E3F41424344454647464748494A4C4D4E4F4F505152535556555657585A5B5C5C5D5E60616261636566676868696B6C6D6F6E6F717374737576787A797A7C7E7D7F80828483858788888A8B8D8D8F90929294959796989A9A9C9EA09FA1A3A3A4A7A8A8AAACABADAFAFB0B3B2B4B6B5B7B9B9BABCBCBEBFBFC1C4C3C5C5C7C9C9CBCBCDCFCFD1D1D3D5D5D7D7D9D8DBDDDDDEDEE0E0E2E2E5E4E7E7E9E8EBEBEDEDEFEFF2F1F4F4F6F6F9F8F8FBFBFDFDFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101020202020202020202020202020202030203030303030304040404040404050505050505050505050505050606060606060607070707070707070707070707070707080808080808080808080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B><F0F0F0EFEFEFEFEEEEEEEEEEEDEDEDEDEDECECECECECEBEBEBEBEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E3E3E3E3E3E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0DFDFDFDFDFDFDEDEDEDEDEDDDDDDDDDDDDDCDCDCDCDCDBDBDBDBDBDBDADADADADADAD9D9D9D9D9D9D8D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6D5D5D5D5D5D5D5D4D4D4D4D4D4D4D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECDCDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCBCBCBCBCACACACACACACACACACACA><C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9D9C9B9A99989796959493929291908F8E8D8C8B8A8A89888786858483828281807F7E7D7C7C7B7A7978777676757473727171706F6E6D6C6C6B6A696868676665646463626160605F5E5D5D5C5B5A5A595857565655545353525151504F4E4E4D4C4B4B4A4949484747464545444342424140403F3E3E3D3D3C3B3B3A39393837373636353434333332313130302F2F2E2D2D2C2C2B2B2A2A2929282727262625252524242323222221212020201F1F1E1E1E1D1D1C1C1C1B1B1B1A1A1A1A1919191918181818><C9C8C7C6C5C4C3C2C1C0BFBEBDBCBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7A6A5A4A3A2A2A1A09F9E9D9C9B9A9A99989796959493929291908F8E8D8C8C8B8A8988878686858483828181807F7E7D7C7C7B7A7978777776757473737271706F6F6E6D6C6C6B6A696868676665656463626261605F5F5E5D5C5C5B5A5A59585757565555545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424141403F3F3E3E3D3C3C3B3B3A393938383737363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828282727262626252524242423232322222221212121202020201F1F1F1F>4 %_Br<02020202020202020202020202020202020202020202010101010101010101020202020202020202020202020202020202020202020203030303030303030303030302020203030303030304040404040404040404040404040404040505050505050505050506060606060606060606050505050404040404050505050506060606060607070707070707070707070707070707070708080808080808080808080707080808080808080909090909090909090909090909090909090909><FDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F5F5F4F4F3F2F1F0F0EFEEEDEDECEBEBEAE9E8E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C4C3C2C0BFBEBDBCBAB9B9B7B6B5B4B3B1B0B0AEADACABA9A8A7A5A4A3A1A09F9F9D9C9B99989695949290908F8E8C8B8988878584848281807E7D7B7A79797876757372716F6F6E6D6B6A6967676665636260605F5D5C5B595A595756555554525150504E4D4C4C4A494848464544444241413F3F3E><F8F6F5F3F0EEECEAE8E7E5E3E1DFDFDEDCDAD8D7D5D3D1D0CECCCAC8C7C5C3C2C0BEBCBCBBB9B7B6B4B2B0AFADABAAA8A6A4A2A0A19F9D9B9A9896959392908E8D8B8B8A88868583817F7E7C7B797A787776747271706E6D6C6C6A696866656462616061605F5E5D5B5A5857585756545352504E4F4E4D4C4A494847484746454443424342413F3E3D3E3D3C3B3A393839383736363635343333323231302F2F302E2D2C2D2C2A2A292A29282728272627262523242322222120201F1E1F>0<ECECECECECECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0><1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243444546474848494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616262636465666768696A6B6C6D6E6F70717273737475767778797A7B7C7D7E7F80808182838485868788898A8A8B8C8D8E8F90919293939495969798999A9B9B9C9D9E9FA0A1A2A2A3A4A5A6A7A8A8A9AAABACADADAEAFB0B1B2B2B3B4B5B6B6B7B8B9BABABBBCBDBDBEBFC0C0C1C2C3C3C4C5C5C6C6C7><2425262728292A2B2C2D2E2F30313132333435363738393A3B3C3D3E3F40414243444545464748494A4B4C4D4E4F50515253545555565758595A5B5C5D5E5F60616262636465666768696A6B6C6D6D6E6F70717273747576777778797A7B7C7D7E7F8080818283848586878888898A8B8C8D8E8F8F90919293949596969798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B7B8B9BABBBBBCBDBEBEBFC0C0C1C2C3C3C4C5C5C6C7C7C8C9C9>4 %_Br<040404040404040404040405040404040404040404040404040304030404040404040404040404040404030303030304040403030303030303030303030303020202020203030303030303030303030202020201010101010202010101010101010101010102020202020202020102020202020202020101010101010101010101010101010102020202020202020101010101000100000000000000000000010101010101010101010100000000000000000000000000000000010101010101010101010101010101010101010101000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020202><1D1E20212224252628292A2B2C2D2F30313234353638393A3C3D3D3E3F414243454647484A4B4D4E4F5052535354555657595A5C5D5E6061616264656668696A6C6D6D6F7071727475767677797A7B7D7E808081828485868687898A8B8D8E8E8F919294949597999A9C9C9D9EA0A1A1A2A3A5A6A6A7A9AAABABADAEAFAFB1B2B3B3B4B5B6B6B7B9BABABBBCBDBDBEC0C1C1C2C3C3C4C5C6C6C7C8C8C9CACBCBCCCDCDCECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADADBDCDCDDDEDEDFDFE0E1E1E2E2E3E4E4E5E5E6E7E7E7E7E8E8E9E9EAEAEAEBEBECECEDEDEDEDEEEEEFEFF0F0F0F0F1F1F2F2F3F3F3F3F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFD><0D0D0E0F0F1011111212131413131415151616171818191A1B1B1D1D1D1D1E1F20202122232425242525262729292A2B2C2B2C2D2E2E2F3031303132333434353635373839393A393A3B3D3E3F403F4041424445444546474948494A4B4C4B4E4F505150525455565657595A5B5A5C5D5E5D5E60626162636565666769696A6B6D6D6E6F717172747375777877797B7A7C7E807F8183828486858789898B8C8C8E90909193939496969899999B9D9D9F9EA1A2A2A4A6A6A7A7A9ABABADACAEAEB0B2B2B4B3B5B7B6B9B8BABABCBCBEC0C0C2C1C3C3C5C5C7C7C8C8CACACCCCCECED0D0D1D1D3D3D5D5D4D6D6D8D8DADADCDCDBDDDDDFDFDFE1E1E2E2E2E4E4E6E6E7E8E8E8EAEAEAECECECEEEEEEEEF0F0F0F3F3F3F3F5F5F5F5F5F6F6F6F6F6F8F8F8F8F8F8>0<F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC><E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCACAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B9B8B7B6B5B4B3B2B1B0AFAEAEADACABAAA9A8A7A6A5A5A4A3A2A1A09F9E9E9D9C9B9A9998979796959493929291908F8E8D8C8C8B8A8988888786858483838281807F7F7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6B6A69686867666565646363626160605F5E5E5D5C5B5B5A5959585757565555545353525151504F4F4E4D4D4C4C4B4A4A494848474746454544444342424141403F3F3E3E3D3D3C3C3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2C2B2B2A2A29292928282727272626252525242424232323222222212121202020201F1F1F1E1E1E1E1E1D1D1D1D1D1C1C1C1C1C1C><E4E3E2E1E0DFDEDDDCDBDAD9D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCACAC9C8C7C6C5C4C3C2C1C0C0BFBEBDBCBBBAB9B8B7B7B6B5B4B3B2B1B0B0AFAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9E9E9D9C9B9A999998979695959493929191908F8E8D8D8C8B8A898988878685858483828281807F7F7E7D7C7C7B7A79797877767675747373727171706F6E6E6D6C6C6B6A6969686767666565646363626161605F5F5E5D5D5C5B5B5A595958575756565554545352525151504F4F4E4E4D4D4C4B4B4A4A4948484747464645454443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373737363635353434333333323231313130302F2F2F2E2E2D2D2D2C2C2C2B2B2B2A2A2A292929292828282727272726262626262525252525242424242424>4 %_Br[0.007843 0.992157 0.972549 0 0.92549 0.109804 0.141176 2 22.7273 100 %_BS%_0.007843 0.992157 0.972549 0 0.92549 0.109804 0.141176 2 22.7273 100 Bs0.227451 1 1 0.164706 0.662745 0.078431 0.101961 2 50 93.2584 %_BS%_0.227451 1 1 0.164706 0.662745 0.078431 0.101961 2 50 93.2584 Bs0.137255 1 1 0.043137 0.792157 0.094118 0.121569 2 50 62.3595 %_BS%_0.137255 1 1 0.043137 0.792157 0.094118 0.121569 2 50 62.3595 Bs0.035294 0.243137 0.121569 0 0.941176 0.780392 0.788235 2 39.3939 34.8315 %_BS%_0.035294 0.243137 0.121569 0 0.941176 0.780392 0.788235 2 39.3939 34.8315 Bs0.007843 0.992157 0.972549 0 0.92549 0.109804 0.141176 2 46.5116 10.6742 %_BS%_0.007843 0.992157 0.972549 0 0.92549 0.109804 0.141176 2 46.5116 10.6742 Bs0.015686 0.113725 0.05098 0 0.968627 0.890196 0.894118 2 37.5 2.24719 %_BS%_0.015686 0.113725 0.05098 0 0.968627 0.890196 0.894118 2 37.5 2.24719 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Checked Pattern)(Checked Pattern) 46.0313 5.4375 113.3027 72.7207 [%AI3_Tile(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 3 w 4 M []0 d0 XR25.0313 11.4375 m31.0313 5.4375 LF25.0313 5.4375 m31.0313 11.4375 LF%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.6699 5.44141 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.6699 5.44141 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR67.7813 0.511719 m67.7813 10.3691 L74.7383 17.332 L84.5996 17.332 L91.5605 10.373 L91.5605 0.515625 L67.7813 0.511719 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR67.7813 0.511719 m67.7813 10.3691 L74.7383 17.332 L84.5996 17.332 L91.5605 10.373 L91.5605 0.515625 L67.7813 0.511719 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR46.0313 5.4375 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR46.0313 5.4375 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR41.1035 0.5 m41.1016 17.3281 L50.959 17.3281 L57.9199 10.3691 L57.9219 0.511719 L41.1035 0.5 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR41.1035 0.5 m41.1016 17.3281 L50.959 17.3281 L57.9199 10.3691 L57.9219 0.511719 L41.1035 0.5 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR113.3086 5.44141 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR113.3086 5.44141 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR118.2188 0.515625 m101.418 0.511719 L101.418 10.3691 L108.377 17.332 L118.2363 17.332 L118.2188 0.515625 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR118.2188 0.515625 m101.418 0.511719 L101.418 10.3691 L108.377 17.332 L118.2363 17.332 L118.2188 0.515625 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR46.0273 39.0781 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR46.0273 39.0781 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR41.0977 50.9668 m50.9551 50.9688 L57.916 44.0078 L57.918 34.1484 L50.957 27.1875 L41.0996 27.1875 L41.0977 50.9668 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR41.0977 50.9668 m50.9551 50.9688 L57.916 44.0078 L57.918 34.1484 L50.957 27.1875 L41.0996 27.1875 L41.0977 50.9668 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR62.8477 22.2598 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR62.8477 22.2598 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR57.9199 10.3691 m50.959 17.3281 L50.957 27.1875 L57.918 34.1484 L67.7773 34.1484 L74.7383 27.1914 L74.7383 17.332 L67.7813 10.3691 L57.9199 10.3691 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR57.9199 10.3691 m50.959 17.3281 L50.957 27.1875 L57.918 34.1484 L67.7773 34.1484 L74.7383 27.1914 L74.7383 17.332 L67.7813 10.3691 L57.9199 10.3691 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR96.4883 22.2637 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR96.4883 22.2637 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.5605 10.373 m84.5996 17.332 L84.5977 27.1914 L91.5566 34.1523 L101.416 34.1523 L108.377 27.1953 L108.377 17.334 L101.418 10.373 L91.5605 10.373 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.5605 10.373 m84.5996 17.332 L84.5977 27.1914 L91.5566 34.1523 L101.416 34.1523 L108.377 27.1953 L108.377 17.334 L101.418 10.373 L91.5605 10.373 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR113.3066 39.082 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR113.3066 39.082 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR118.2363 27.1914 m108.377 27.1914 L101.4141 34.1484 L101.4141 44.0098 L108.373 50.9707 L118.2344 50.9707 L118.2363 27.1914 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR118.2363 27.1914 m108.377 27.1914 L101.4141 34.1484 L101.4141 44.0098 L108.373 50.9707 L118.2344 50.9707 L118.2363 27.1914 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR96.4844 55.9023 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR96.4844 55.9023 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.5566 44.0117 m84.5957 50.9707 L84.5938 60.8311 L91.5527 67.792 L101.4141 67.792 L108.373 60.834 L108.373 50.9746 L101.4141 44.0137 L91.5566 44.0117 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.5566 44.0117 m84.5957 50.9707 L84.5938 60.8311 L91.5527 67.792 L101.4141 67.792 L108.373 60.834 L108.373 50.9746 L101.4141 44.0137 L91.5566 44.0117 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR62.8457 55.8994 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR62.8457 55.8994 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR57.916 44.0078 m50.9551 50.9688 L50.9531 60.8271 L57.9141 67.7881 L67.7734 67.7891 L74.7344 60.8301 L74.7363 50.9707 L67.7773 44.0098 L57.916 44.0078 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR57.916 44.0078 m50.9551 50.9688 L50.9531 60.8271 L57.9141 67.7881 L67.7734 67.7891 L74.7344 60.8301 L74.7363 50.9707 L67.7773 44.0098 L57.916 44.0078 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR46.0254 72.7168 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR46.0254 72.7168 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR57.9141 77.6484 m57.9141 67.7881 L50.9551 60.8271 L41.0977 60.8262 L41.0938 77.625 L57.9141 77.6484 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR57.9141 77.6484 m57.9141 67.7881 L50.9551 60.8271 L41.0977 60.8262 L41.0938 77.625 L57.9141 77.6484 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.6641 72.7207 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.6641 72.7207 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.5527 77.6523 m91.5527 67.792 L84.5957 60.8311 L74.7363 60.8301 L67.7734 67.7891 L67.7734 77.6494 L91.5527 77.6523 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.5527 77.6523 m91.5527 67.792 L84.5957 60.8311 L74.7363 60.8301 L67.7734 67.7891 L67.7734 77.6494 L91.5527 77.6523 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR113.3027 72.7207 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR113.3027 72.7207 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR118.2344 60.8311 m108.373 60.8301 L101.4141 67.7891 L101.4121 77.6494 L118.2188 77.6523 L118.2344 60.8311 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR118.2344 60.8311 m108.373 60.8301 L101.4141 67.7891 L101.4121 77.6494 L118.2188 77.6523 L118.2344 60.8311 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.666 39.082 mF%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.666 39.082 mS%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR74.7383 27.1914 m67.7773 34.1484 L67.7773 44.0098 L74.7363 50.9707 L84.5957 50.9707 L91.5566 44.0117 L91.5566 34.1523 L84.5977 27.1914 L74.7383 27.1914 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR74.7383 27.1914 m67.7773 34.1484 L67.7773 44.0098 L74.7363 50.9707 L84.5957 50.9707 L91.5566 44.0117 L91.5566 34.1523 L84.5977 27.1914 L74.7383 27.1914 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa 0.784314 0.090196 0.458824 0 0 0.662745 0.615686 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR7.46094 27.1816 m0.501953 34.1406 L0.5 44 L7.45898 50.9609 L17.3184 50.9609 L24.2793 44.0039 L24.2813 34.1445 L17.3223 27.1836 L7.46094 27.1816 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa 0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR7.46094 27.1816 m0.501953 34.1406 L0.5 44 L7.45898 50.9609 L17.3184 50.9609 L24.2793 44.0039 L24.2813 34.1445 L17.3223 27.1836 L7.46094 27.1816 Ls101.4141 67.7891 m101.4141 77.6494 L91.5527 77.6494 L91.5527 67.7891 L101.4141 67.7891 Lf67.7813 0.511719 m67.7813 10.3691 L57.9199 10.3691 L57.9199 0.511719 L67.7813 0.511719 Lf101.418 0.511719 m101.418 10.3691 L91.5586 10.3691 L91.5586 0.511719 L101.418 0.511719 Lf84.5996 17.332 m84.5996 27.1914 L74.7383 27.1914 L74.7383 17.332 L84.5996 17.332 Lf67.7773 34.1484 m67.7773 44.0098 L57.918 44.0098 L57.918 34.1484 L67.7773 34.1484 Lf50.957 17.3281 m50.957 27.1875 L41.1016 27.1875 L41.1016 17.3281 L50.957 17.3281 Lf118.2363 17.332 m118.2363 27.1914 L108.377 27.1914 L108.377 17.332 L118.2363 17.332 Lf101.4141 34.1484 m101.4141 44.0098 L91.5566 44.0098 L91.5566 34.1484 L101.4141 34.1484 Lf84.5977 50.9707 m84.5977 60.8301 L74.7363 60.8301 L74.7363 50.9707 L84.5977 50.9707 Lf67.7734 67.7891 m67.7734 77.6494 L57.9141 77.6494 L57.9141 67.7891 L67.7734 67.7891 Lf50.9551 50.9688 m50.9551 60.8271 L41.0977 60.8271 L41.0977 50.9688 L50.9551 50.9688 Lf118.2344 50.9707 m118.2344 60.8301 L108.373 60.8301 L108.373 50.9707 L118.2344 50.9707 Lf17.3203 52.9609 m17.3203 62.8213 L7.46094 62.8213 L7.46094 52.9609 L17.3203 52.9609 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 18)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3918.7319 4618.8438 m-3810.1599 4618.8438 L-3810.1599 4617.4312 L-3918.7319 4617.4312 L-3918.7319 4618.8438 Lnu0 O0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa-3810.1599 4617.4688 m-3810.2112 4617.4312 L-3810.3442 4617.5352 L-3810.1599 4617.4688 Lf-3811.0344 4617.6997 m-3811.0088 4617.7188 -3811.0212 4617.75 -3810.9951 4617.769 C-3810.4817 4617.4727 L-3810.7112 4617.3047 -3810.8833 4617.8125 -3811.0344 4617.6997 cf-3811.1855 4617.6699 m-3811.3848 4617.6006 -3811.4673 4617.7393 -3811.5137 4617.7871 C-3811.4441 4617.6792 -3811.1423 4617.8203 -3811.1855 4617.6699 Cf-3828.7217 4617.7393 m-3828.7031 4617.7383 -3828.6785 4617.7344 -3828.6599 4617.73 C-3828.6912 4617.7256 -3828.7112 4617.73 -3828.7217 4617.7393 Cf-3833.2969 4618.2119 m-3833.3447 4618.3232 L-3832.4912 4618.125 -3831.5281 4618.3262 -3830.6252 4618.2393 C-3830.6863 4618.2793 L-3828.3953 4618.3223 -3826.2825 4618.1367 -3824.0095 4618.0518 C-3824.0449 4618.0645 -3824.0569 4618.0967 -3824.0935 4618.1094 c-3823.9839 4618.0713 -3823.8623 4618 -3823.7393 4618.0093 C-3823.7073 4618.0342 -3823.7737 4618.061 -3823.8132 4618.0723 C-3823.3333 4618.2559 -3822.4033 4617.9561 -3822.1033 4618.0977 C-3821.9683 4618.0781 -3821.9087 4618.0015 -3821.9839 4617.9429 C-3820.2048 4617.896 -3818.3015 4617.8608 -3816.4895 4617.7168 C-3816.4023 4617.7422 -3816.3865 4617.792 -3816.4104 4617.8555 C-3814.8616 4617.5576 -3813.2383 4617.6763 -3811.6536 4617.7246 C-3811.5928 4617.6465 -3811.8152 4617.6416 -3811.6592 4617.5601 C-3812.1687 4617.4624 -3812.5923 4617.7524 -3813.0544 4617.6094 C-3812.9951 4617.5342 L-3813.3313 4617.4854 -3813.0632 4617.7246 -3813.4121 4617.6274 C-3813.5496 4617.5645 -3813.3777 4617.5313 -3813.4417 4617.5254 C-3814.1563 4617.5566 -3814.9016 4617.4883 -3815.5745 4617.6719 C-3815.7407 4617.5078 -3816.3423 4617.666 -3816.6064 4617.5093 C-3816.7913 4617.5742 -3816.9768 4617.5576 -3817.0471 4617.666 C-3819.5481 4617.5796 -3822.1033 4617.7383 -3824.6653 4617.7261 C-3825.8643 4618.0435 -3827.3 4617.665 -3828.7231 4617.7715 C-3828.7329 4617.7603 -3828.7312 4617.748 -3828.7217 4617.7393 C-3829.1855 4617.8174 -3829.8616 4617.8545 -3830.4153 4617.8145 C-3830.8843 4617.9492 L-3834.2161 4617.6729 -3837.6208 4617.8672 -3841.0049 4617.7524 c-3844.8503 4617.6729 -3848.2192 4617.4453 -3851.9641 4617.8633 C-3851.9592 4617.832 -3851.9895 4617.8145 -3851.8928 4617.8022 C-3852.9736 4617.8662 -3853.9583 4617.7524 -3854.9761 4617.8184 C-3854.9729 4617.7871 L-3857.4983 4618.0488 -3860.2295 4617.7524 -3862.6641 4618.0342 C-3865.6279 4618.0059 -3868.9792 4618.0342 -3872.1162 4618.1152 C-3872.1089 4618.0518 L-3874.6191 4618.1846 -3877.0449 4617.8516 -3879.5496 4617.9517 C-3882.1252 4617.8086 -3884.8464 4618.3125 -3887.4441 4618.1211 C-3889.0513 4617.8125 -3891.1624 4618.4741 -3892.6721 4618.1543 C-3895.7737 4617.6719 -3898.7825 4617.9824 -3901.8833 4618.2715 C-3904.7439 4618.0996 -3907.6001 4618.541 -3910.3704 4618.1904 C-3911.6831 4618.415 -3913.1328 4617.9121 -3914.5935 4617.9766 C-3914.5413 4618.0547 L-3915.0657 4617.8184 -3915.7097 4618.3853 -3916.0369 4618.0342 C-3915.9817 4618.0181 L-3916.2593 4617.8398 -3916.6265 4618.4385 -3916.7952 4618.2261 C-3916.8401 4618.3145 L-3917.1763 4618.3398 -3916.8799 4618.2144 -3917.1392 4618.1792 C-3917.2368 4618.1904 -3917.1763 4618.3398 -3917.3799 4618.2891 C-3917.4241 4617.9287 -3918.2031 4618.3672 -3918.2263 4617.9624 C-3918.0425 4617.9624 -3918.5144 4617.8057 -3918.1016 4617.7207 C-3918.2192 4617.6792 -3918.7825 4617.6992 -3918.7319 4617.8711 C-3918.78 4618.0537 -3919 4618.2124 -3918.6577 4618.3535 C-3918.5889 4618.2207 L-3918.4736 4618.3535 -3918.5012 4618.2871 -3918.46 4618.3867 C-3918.0127 4618.4043 -3917.9529 4618.5977 -3917.6321 4618.6772 C-3917.6353 4618.6729 -3917.6384 4618.6699 -3917.6335 4618.6631 C-3917.4143 4618.5039 -3917.1111 4618.5977 -3916.9375 4618.6211 C-3916.8679 4618.6953 L-3916.7625 4618.8496 -3916.3591 4618.3926 -3916.4951 4618.6582 C-3915.5857 4618.5923 -3914.5432 4618.5957 -3913.5271 4618.5923 C-3913.3848 4618.4912 -3912.7493 4618.6016 -3912.9712 4618.4072 c-3912.7168 4618.6289 -3911.9607 4618.6846 -3911.6799 4618.6763 C-3911.6904 4618.6973 -3911.7024 4618.7207 -3911.7463 4618.7124 C-3911.2017 4619 -3911.1008 4618.4463 -3910.5903 4618.7979 C-3910.5105 4618.5493 -3909.6631 4618.8774 -3909.3743 4618.5854 C-3909.3113 4618.6406 -3909.2903 4618.6904 -3909.3132 4618.7344 C-3908.3943 4618.7393 -3907.3792 4618.8296 -3906.6016 4618.8408 C-3905.9373 4618.623 -3904.9929 4618.9395 -3904.4216 4618.6387 C-3903.9482 4618.7017 -3903.1824 4618.8281 -3902.5215 4618.707 C-3902.5857 4618.7437 L-3901.8401 4618.7261 -3900.9087 4618.7104 -3900.3972 4618.5215 C-3900.1768 4618.8096 -3899.8545 4618.7524 -3899.5322 4618.8438 C-3899.0344 4618.7104 -3898.0295 4618.75 -3897.27 4618.6289 C-3897.1536 4618.7617 -3896.6433 4618.5723 -3896.6042 4618.7656 C-3894.4761 4618.3926 -3891.8447 4618.5225 -3889.5723 4618.8047 C-3889.6052 4618.8184 L-3889.3103 4618.7124 -3888.9705 4618.4785 -3888.6704 4618.3413 C-3888.6409 4618.3584 -3888.6443 4618.3896 -3888.7073 4618.3896 C-3888.2922 4618.3535 -3887.9041 4618.5435 -3887.4895 4618.5078 C-3887.4929 4618.54 -3887.4929 4618.54 -3887.5601 4618.5703 C-3887.1711 4618.4844 -3886.7561 4618.7246 -3886.2969 4618.5752 C-3886.2712 4618.6265 L-3885.9792 4618.5547 L-3885.9863 4618.6182 -3885.9976 4618.7144 -3886.1536 4618.6934 C-3882.5903 4618.7559 -3878.9121 4618.4248 -3875.2537 4618.4727 C-3875.3879 4618.5332 L-3874.6785 4618.4248 L-3874.6824 4618.457 -3874.7161 4618.4727 -3874.75 4618.4873 C-3873.8464 4618.5957 -3872.9087 4618.415 -3872.0281 4618.4424 C-3872.0322 4618.4736 -3872.1655 4618.5352 -3872.0422 4618.5703 C-3871.3904 4618.396 -3870.9951 4618.7964 -3870.6687 4618.4351 C-3870.6384 4618.4517 -3870.6177 4618.5332 -3870.6841 4618.5625 C-3868.8704 4618.4424 -3867.0081 4618.4492 -3865.1809 4618.5078 C-3863.6592 4618.1807 -3861.9583 4618.4766 -3860.3777 4618.2168 C-3860.3855 4618.2822 L-3858.3391 4618.0537 -3856.1682 4618.2979 -3854.0471 4618.2524 C-3853.1663 4618.2783 -3852.5713 4618.2012 -3851.6863 4618.1973 C-3851.6641 4618.2783 L-3850.1743 4617.9688 -3848.5327 4618.5566 -3846.9785 4618.2158 C-3847.0857 4618.3262 L-3846.8447 4618.1553 -3846.1455 4618.3867 -3846.2375 4618.0933 C-3845.9631 4618.1816 L-3844.9072 4617.7949 -3844.0413 4618.3608 -3842.7473 4618.1094 C-3842.8323 4618.1792 L-3842.4883 4618.125 -3842.0872 4618.082 -3841.8323 4618.1465 C-3841.8721 4618.1563 -3841.8535 4618.1768 -3841.9353 4618.1953 C-3840.8577 4618.4707 -3839.6584 4618.166 -3838.5215 4618.1768 C-3838.6504 4618.3062 L-3838.1008 4618.1543 -3837.0928 4618.2959 -3836.3704 4618.2261 C-3836.4143 4618.2871 L-3836.0488 4618.2012 L-3836.0393 4618.3232 L-3835.0991 4618.332 -3834.2144 4618.2261 -3833.2969 4618.2119 Cf-3823.8132 4618.0723 m-3823.8159 4618.0713 -3823.8201 4618.0713 -3823.8232 4618.0684 C-3823.8513 4618.0791 -3823.8376 4618.0781 -3823.8132 4618.0723 Cf-3917.5168 4618.7017 m-3917.5601 4618.6953 -3917.5959 4618.6875 -3917.6321 4618.6772 C-3917.6233 4618.7017 -3917.5537 4618.6973 -3917.5168 4618.7017 cfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7791.3833 8491.4551 m-7699.5479 8491.4551 L-7699.5479 8487.1758 L-7791.3833 8487.1758 L-7791.3833 8491.4551 Ln0 O0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa-7791.1631 8488.7754 m-7791.5 8488.8418 -7790.9814 8489.0313 -7791.3833 8488.8887 C-7791.3379 8488.7705 -7791.2725 8488.6816 -7791.1631 8488.7754 Cf-7700.6675 8488.9414 m-7701.7524 8489.7041 -7703.1816 8488.9336 -7704.3701 8489.4199 C-7704.5098 8489.4521 -7704.3345 8489.002 -7704.6484 8489.1025 C-7705.8008 8489.6953 -7707.6162 8489.3418 -7709.0195 8488.8848 C-7708.9346 8488.7666 L-7709.2017 8488.6816 -7709.5283 8489.0723 -7709.8115 8489.0176 C-7709.8135 8488.9395 -7709.7207 8488.9063 -7709.7861 8488.7979 C-7709.8574 8489.0352 -7710.2983 8488.9082 -7710.4185 8489.084 C-7710.5303 8488.9922 -7710.5195 8488.8047 -7710.6641 8488.7002 C-7710.8262 8488.9697 L-7711.2769 8489.6094 -7711.9209 8488.9258 -7712.5361 8489.2559 C-7712.5063 8489.1934 -7712.4453 8489.1445 -7712.4941 8489.084 C-7713.4814 8489.4727 -7714.7168 8489.3994 -7715.8208 8489.543 C-7715.7769 8489.4482 -7715.7363 8489.2754 -7715.8008 8489.168 C-7715.8555 8489.4512 -7716.1963 8489.5225 -7716.4922 8489.5781 C-7716.6255 8489.2871 -7716.9995 8489.8438 -7717.3467 8489.6826 C-7717.3169 8489.6191 L-7717.5732 8489.9238 -7717.6973 8489.4434 -7717.9053 8489.8086 C-7718.0684 8489.5801 L-7718.1807 8489.9902 -7718.4395 8489.3672 -7718.6514 8489.5762 C-7718.6445 8489.6602 L-7718.8442 8489.7598 -7718.9482 8489.5537 -7719.1338 8489.623 C-7719.1514 8489.5762 L-7719.5854 8489.6826 -7719.8379 8489.4551 -7719.8271 8489.7754 C-7719.9795 8489.5186 -7719.4063 8489.6582 -7719.6455 8489.2842 C-7721.0732 8489.6152 -7722.5459 8489.5498 -7723.9834 8489.5566 C-7724.1465 8489.4277 -7724.2505 8489.3887 -7724.2871 8489.2666 C-7724.4307 8489.332 -7724.8281 8489.3262 -7724.9585 8489.4902 C-7724.9102 8489.4834 -7725.0513 8489.3262 -7725.1274 8489.3105 C-7725.3887 8489.1895 -7725.4131 8489.6621 -7725.7002 8489.5186 C-7725.5859 8489.4336 -7725.5469 8489.3301 -7725.5854 8489.2109 C-7725.8301 8489.4609 -7726.1577 8489.4209 -7726.4473 8489.502 C-7726.4023 8489.4482 -7726.3325 8489.416 -7726.3433 8489.3154 C-7726.6602 8489.5986 -7726.9209 8489.2559 -7727.1982 8489.4346 C-7727.0947 8489.25 L-7727.5415 8489.0254 -7727.2266 8489.6367 -7727.6128 8489.5039 C-7727.52 8489.4453 -7727.5527 8489.373 -7727.5361 8489.2979 C-7727.8965 8489.6338 -7728.4795 8489.5225 -7728.8389 8489.6367 C-7728.8174 8489.6113 -7728.8232 8489.5605 Y-7729.2148 8489.6025 -7729.6245 8489.498 -7730.0552 8489.6445 C-7730.2119 8489.5625 -7730.0039 8489.1934 -7730.4185 8489.2617 C-7730.4033 8489.6328 -7731.1221 8489.4141 -7730.8779 8489.834 C-7731.2319 8489.7734 -7731.7925 8489.6338 -7732.0283 8489.7598 C-7731.8691 8489.6191 -7732.2007 8489.3066 -7731.9063 8489.2754 C-7732.1289 8489.0498 L-7732.0957 8488.8984 -7731.8999 8489.1016 -7731.9707 8488.9102 C-7732.1182 8488.9258 -7732.5479 8489.0723 -7732.6797 8489.0117 C-7732.9531 8489.2393 -7733.2041 8489.6641 -7733.6465 8489.7109 C-7733.4385 8489.5664 -7733.7646 8489.3018 -7733.6235 8489.2383 C-7734.2407 8489.9482 L-7734.3877 8489.9658 -7734.2725 8489.6563 -7734.4854 8489.7529 C-7734.4746 8489.8506 -7734.5674 8489.9121 -7734.6318 8489.9922 C-7734.6875 8489.9482 -7735.2441 8490.084 -7735.3081 8489.7178 C-7735.3735 8489.5762 -7735.0684 8489.6426 -7735.2314 8489.5117 C-7735.5029 8489.5146 -7735.5151 8489.6406 -7735.7871 8489.6465 C-7735.7925 8489.5977 L-7735.9717 8489.543 -7736.3213 8489.7529 -7736.1265 8489.9551 C-7736.0015 8489.9658 -7736.1738 8489.7354 -7735.9888 8489.8418 C-7736.1152 8490.0537 -7736.4312 8490.1133 -7736.7031 8490.1162 C-7736.6104 8490.0586 -7736.6216 8489.9609 -7736.5845 8489.8574 C-7736.9497 8490.1445 -7737.3369 8490.2354 -7737.7451 8490.3555 C-7737.7515 8490.5293 -7737.5928 8490.0391 -7737.5327 8490.1309 C-7738.0557 8489.8896 -7738.6128 8490.4727 -7739.0479 8490.1201 C-7738.9766 8490.0898 -7739.0098 8490.3672 -7739.0146 8490.3184 C-7739.2666 8490.2969 -7739.2549 8490.0449 -7739.4189 8490.1377 C-7739.4355 8489.9902 -7739.6255 8490.1855 -7739.7944 8490.2305 C-7739.8818 8490.3369 -7739.8384 8490.1582 -7739.6914 8490.1426 C-7739.9268 8490.2666 -7740.8691 8490.4941 -7741.4131 8490.2793 C-7741.4023 8490.377 -7741.7471 8490.6377 -7741.8721 8490.627 C-7741.8232 8490.3984 L-7741.9375 8490.2617 -7742.2422 8490.418 -7742.2632 8490.2227 C-7742.5303 8490.5 -7741.2344 8489.9863 -7741.5957 8490.2002 C-7741.6895 8490.0098 -7742.0991 8490.5645 -7742.0215 8490.2529 C-7742.2725 8490.2617 -7742.5161 8490.5186 -7742.7559 8490.3047 C-7742.6865 8490.3418 -7742.5522 8489.9873 -7742.7549 8490.0039 C-7743.1123 8490.0449 -7742.8564 8490.1133 -7743.1465 8490.1895 C-7743.3281 8490.2832 L-7743.3398 8490.5059 -7743.6475 8490.2529 -7743.5146 8490.502 C-7743.5586 8490.3184 -7744.0337 8490.6152 -7743.9971 8490.2461 C-7743.9473 8489.9551 L-7744.1016 8489.9766 -7744.2002 8490.2617 -7744.3213 8490.3896 C-7744.3418 8490.3633 -7744.3823 8490.3047 -7744.3745 8490.2578 C-7744.3994 8490.7031 -7744.7432 8490.2207 -7744.9268 8490.5645 C-7745.2505 8490.4102 -7745.7495 8490.5498 -7745.9023 8490.2734 C-7746.1514 8490.4082 -7746.3784 8490.5674 -7746.6621 8490.4727 C-7746.6055 8490.4307 -7746.5283 8490.418 -7746.5122 8490.3223 C-7746.6904 8490.1914 -7746.7344 8490.3086 -7746.8975 8490.3809 C-7746.8608 8490.3145 -7747.2539 8490.1201 -7747.4521 8489.9629 C-7747.6992 8490.0957 -7747.6143 8490.3359 -7747.6392 8490.4824 C-7747.8652 8490.043 -7748.3379 8490.7656 -7748.6211 8490.3672 C-7748.5352 8490.3066 -7748.2598 8490.1514 -7748.4658 8490.041 C-7748.6919 8489.6025 -7748.9219 8490.3643 -7749.2861 8490.1543 C-7749.1968 8490.5186 L-7749.3594 8490.293 -7749.7334 8490.7305 -7749.6963 8490.3594 C-7749.8184 8490.4902 -7750.1265 8490.2383 -7750.0859 8490.5938 C-7750.6846 8490.293 -7751.5425 8490.7754 -7751.9102 8490.1377 C-7751.9961 8490.1973 -7752.2104 8490.1367 -7752.1665 8490.3193 C-7752.0239 8490.5176 -7751.9673 8490.1777 -7751.9141 8490.3125 C-7751.9912 8490.3232 -7752.0078 8490.4209 -7752.0161 8490.4697 C-7752.2021 8490.3887 -7752.3486 8490.3633 -7752.1729 8490.0674 C-7752.5869 8489.8477 -7752.6001 8490.6719 -7753.1274 8490.5322 C-7753.1035 8490.3857 -7753.1436 8490.3301 -7753.2979 8490.3535 C-7753.5903 8490.6055 L-7753.9312 8490.5469 -7753.7842 8490.2705 -7753.7925 8490.0215 C-7753.9746 8490.0645 -7754.1973 8490.0527 -7754.2803 8490.2383 C-7754.5015 8489.9258 L-7754.3398 8490.1514 -7754.6514 8490.0762 -7754.7368 8490.1367 C-7754.6514 8490.0762 L-7754.6846 8489.9697 -7754.8955 8490.0352 -7755.0024 8490.0664 C-7754.9766 8490.2207 -7754.7617 8490.2832 -7754.6445 8490.3281 C-7754.7373 8490.4375 -7754.8823 8490.4121 -7755.0059 8490.541 C-7754.9648 8490.2969 -7755.3027 8490.3672 -7755.4473 8490.3418 C-7755.6133 8490.2891 -7755.6348 8490.5605 -7755.6831 8490.5527 C-7755.6875 8490.4258 -7755.9541 8490.5313 -7755.8247 8490.3535 C-7755.7681 8490.3125 -7755.6953 8490.4766 -7755.6016 8490.3643 C-7755.7109 8490.2705 -7755.6982 8490.0498 -7755.9258 8490.2109 C-7756.0967 8490.332 -7755.8818 8490.6934 -7756.2061 8490.5391 C-7756.1211 8490.4785 -7756.1055 8490.3809 -7756.0391 8490.293 C-7756.3433 8490.166 L-7756.3564 8490.3887 L-7756.3975 8490.332 -7756.3691 8490.3125 -7756.3877 8490.2832 C-7756.4785 8490.5176 -7756.8521 8490.3555 -7756.9209 8490.6191 C-7757.0742 8490.6426 -7757.2441 8490.4648 -7757.3906 8490.4395 C-7757.3623 8490.4199 L-7757.5415 8490.2891 -7757.7793 8490.375 -7757.9297 8490.5254 C-7757.9219 8490.4766 L-7758.0195 8490.459 -7758.2505 8490.4941 -7758.3735 8490.625 C-7758.6201 8490.457 -7758.4561 8489.7842 -7758.7295 8490.0645 C-7758.98 8490.0723 -7759.1221 8490.4727 -7759.0215 8490.6152 C-7759.4717 8490.4648 -7759.9834 8490.8281 -7760.4009 8490.4824 C-7760.4658 8490.5723 -7760.4248 8490.6289 -7760.5586 8490.6816 C-7761.2197 8490.5938 -7761.9551 8490.9453 -7762.4814 8490.5078 C-7762.29 8490.4141 -7762.4688 8490.2842 -7762.4727 8490.1582 C-7762.6309 8490.3574 -7762.6631 8489.9512 -7762.7197 8490.293 C-7762.7041 8490.4941 -7762.7197 8490.5918 -7762.5337 8490.6729 C-7762.9282 8490.7813 -7763.5283 8490.7813 -7763.7471 8490.5938 C-7763.6377 8490.6865 -7763.7227 8490.748 -7763.8086 8490.8086 C-7763.7803 8490.4873 -7764.0713 8490.4395 -7764.2915 8490.5527 C-7764.3223 8490.748 L-7764.4658 8490.5469 L-7764.5503 8490.6094 -7764.5591 8490.957 -7764.7773 8490.7695 C-7764.7891 8490.6934 -7764.8018 8490.6162 -7764.8418 8490.5605 C-7765.0693 8490.7207 -7765.3906 8490.9922 -7765.6377 8490.8262 C-7765.8398 8490.541 L-7765.9453 8490.5723 -7766.1235 8490.7441 -7765.9375 8490.8262 C-7766.3594 8490.6543 -7766.6309 8490.6328 -7766.7646 8490.3857 C-7767.4912 8490.9873 -7768.5459 8491.0117 -7769.3906 8490.9688 C-7769.3652 8490.8223 L-7769.5923 8490.6855 -7769.4834 8491.0781 -7769.6416 8490.9766 C-7769.5684 8490.8369 -7769.8145 8490.6729 -7769.6362 8490.502 C-7769.9609 8490.3477 -7770.0547 8490.7559 -7770.2656 8490.8223 C-7770.2979 8491.0146 -7770.0957 8490.6992 -7770.1367 8490.9434 C-7770.1729 8491.0117 -7770.5859 8490.793 -7770.6362 8491.084 C-7770.7178 8490.9697 -7770.6543 8490.7559 -7770.6104 8490.6377 C-7770.8086 8490.7793 L-7771.0513 8490.4395 -7770.2559 8490.1719 -7770.5107 8489.7529 C-7770.6934 8489.7979 L-7770.8682 8489.4941 -7770.21 8489.4551 -7770.6689 8489.3506 C-7770.8682 8489.4941 -7771.0381 8489.916 -7770.8608 8490.0449 C-7771.2754 8490.125 -7771.0527 8490.7383 -7771.4985 8490.7139 C-7771.6201 8490.543 -7771.1416 8490.6729 -7771.2275 8490.4336 C-7771.4375 8490.1992 -7771.6484 8490.5645 -7771.8354 8490.4824 C-7771.6279 8490.5918 -7771.8032 8490.8857 -7771.9375 8490.9395 C-7772.1641 8490.8018 -7771.79 8490.6641 -7772.1113 8490.6338 C-7772.1641 8490.8018 -7772.4595 8490.9277 -7772.2041 8491.0449 C-7772.3203 8491.4258 -7772.5381 8490.9395 -7772.7129 8491.2344 C-7772.8174 8490.9658 -7772.3823 8490.6152 -7772.7354 8490.4814 C-7772.6792 8490.7393 -7773.1704 8490.832 -7772.9839 8491.2139 C-7773.1221 8491.1406 -7773.1367 8490.9375 -7773.0361 8490.7793 C-7773.2334 8490.6201 -7773.5151 8491.25 -7773.5801 8490.7383 C-7773.6479 8491.002 L-7773.71 8490.916 -7773.7983 8490.8506 -7773.8994 8490.709 C-7774.0732 8490.7041 -7774.46 8491.0664 -7774.4443 8490.668 C-7774.5 8490.709 -7774.8975 8490.6914 -7774.7441 8490.9658 C-7774.4971 8491.1338 -7774.46 8490.7656 -7774.3223 8491.1377 C-7774.4971 8490.834 -7774.6787 8491.1777 -7774.8213 8491.2793 C-7774.8447 8491.125 L-7774.9297 8491.1855 -7775.1255 8491.1514 -7775.1787 8491.3184 C-7775.1133 8491.2305 -7775.1475 8491.125 -7775.2148 8491.0879 C-7775.3042 8491.3223 L-7775.6494 8491.4395 -7775.3857 8490.9102 -7775.7217 8490.9785 C-7775.4663 8490.7969 L-7775.5225 8490.8359 -7775.6367 8490.6162 -7775.7979 8490.6895 C-7775.8604 8490.9033 -7775.9775 8491.1602 -7776.0313 8491.3262 C-7776.2207 8491.4199 -7776.1162 8491.085 -7776.3027 8491.3047 C-7776.0586 8491.0469 L-7776.0215 8490.9766 -7776.2231 8490.6934 -7776.4761 8490.6992 C-7776.6377 8490.7734 -7776.8887 8491.082 -7776.6338 8491.1992 C-7776.7607 8491.2031 -7776.9385 8491.0723 -7776.8379 8490.916 C-7777.1255 8490.9902 -7776.7998 8491.1465 -7777.0479 8491.2793 C-7777.1494 8491.1367 -7777.4658 8490.9336 -7777.6563 8490.7266 C-7777.3975 8490.3682 L-7777.5693 8490.3643 L-7777.3467 8490.0781 -7777.6826 8490.1465 -7777.5566 8489.8438 C-7777.6743 8489.7969 -7777.8169 8489.8994 -7777.9307 8489.9785 C-7777.5864 8490.4629 -7778.3159 8490.6406 -7778.2158 8491.082 C-7778.6875 8491.2031 -7778.5107 8490.0078 -7779.0024 8490.6992 C-7778.9219 8490.8145 -7779.1533 8491.1504 -7778.8564 8491.0225 C-7779.1494 8490.9746 -7779.0557 8491.4658 -7779.4014 8491.2832 C-7779.1455 8491.1016 -7779.6763 8490.8359 -7779.3066 8490.5723 C-7779.3311 8490.7178 -7779.1001 8490.6826 -7779.0435 8490.6426 C-7779.1641 8490.4727 -7779.0186 8490.1973 -7779.3184 8490.1973 C-7779.5015 8490.2393 -7779.7524 8490.248 -7779.7158 8490.4785 C-7779.7085 8490.7314 -7779.4365 8490.4512 -7779.5537 8490.707 C-7779.9185 8490.7949 -7779.9795 8490.4102 -7780.1304 8490.8594 C-7779.8999 8490.8232 -7779.8423 8491.084 -7779.8467 8491.2578 C-7780.1143 8491.3633 L-7780.0625 8491.1953 L-7780.4922 8491.0742 -7780.1895 8491.5 -7780.6055 8491.4551 C-7780.8008 8491.123 L-7780.7017 8490.8369 -7780.1953 8491.25 -7780.2695 8490.7842 C-7780.54 8490.7656 -7780.6299 8491.002 -7780.8848 8490.8818 C-7780.8281 8490.8418 -7780.7505 8490.8301 -7780.6943 8490.7891 C-7780.7915 8490.7734 -7780.8877 8490.1563 -7781.2734 8490.5176 C-7781.4727 8490.6582 -7781.3262 8490.6826 -7781.3311 8490.8574 C-7781.7656 8490.9102 -7781.8955 8491.0879 -7782.1753 8491.1152 C-7782.1177 8490.7754 -7782.6699 8491.082 -7782.3608 8490.7344 C-7782.2188 8490.9336 -7781.5903 8490.9141 -7781.4365 8490.5898 C-7781.5947 8490.1865 -7781.0952 8490.6465 -7781.0024 8490.2383 C-7781.3506 8490.2285 -7781.3335 8489.832 -7781.3896 8489.5723 C-7781.4863 8489.5537 -7781.5801 8489.6641 -7781.6377 8489.7041 C-7781.6787 8489.9482 -7781.5522 8489.9453 -7781.5449 8490.1973 C-7781.9336 8490.1309 -7782.3081 8490.2666 -7782.5225 8490.5059 C-7782.6523 8490.3848 -7782.6113 8490.1406 -7782.4575 8490.1162 C-7782.9199 8490.1895 -7783.4141 8490.1563 -7783.8535 8490.082 C-7783.5693 8490.4814 -7784.3433 8490.1758 -7784.1494 8490.5078 C-7783.9141 8490.5977 -7783.7119 8490.8818 -7783.8418 8491.0605 C-7783.9888 8491.0352 -7783.8369 8490.8857 -7783.8984 8490.8008 C-7784.0859 8491.0186 -7784.1895 8490.4512 -7784.3735 8490.7949 C-7783.9512 8490.666 -7784.2915 8490.3086 -7784.2139 8489.9961 C-7784.5186 8490.1719 -7784.2007 8489.7734 -7784.5024 8489.7734 C-7784.8057 8489.9473 -7785.1787 8490.084 -7785.5161 8490.1514 C-7785.9399 8489.8555 -7786.5898 8490.1465 -7786.9683 8490.1582 C-7787.1665 8490 -7787.0322 8489.6465 -7787.2471 8489.585 C-7787.4995 8489.5918 -7787.0601 8489.9658 -7787.4336 8489.8047 C-7787.3975 8489.7344 L-7787.5107 8489.8154 -7788.0825 8489.4941 -7788.1929 8490.002 C-7788.0776 8489.6191 L-7788.1475 8489.584 -7788.2119 8489.6719 -7788.2695 8489.7129 C-7788.2725 8489.5879 -7788.3535 8489.4746 -7788.2402 8489.3926 C-7788.4707 8489.1289 -7788.7241 8489.4346 -7788.9746 8489.4453 C-7788.8135 8489.6719 L-7789.2422 8489.8496 -7789.5293 8489.625 -7789.9443 8489.7041 C-7789.9316 8489.4824 L-7790.1787 8489.6152 L-7790.1182 8489.3994 -7790.3447 8489.2617 -7790.4751 8489.4414 C-7789.8335 8488.8984 L-7789.6553 8489.0293 -7790.0283 8489.166 -7789.9165 8489.3848 C-7789.8213 8489.5762 -7789.4375 8489.5146 -7789.3755 8489.3018 C-7789.5225 8489.2773 -7789.5293 8489.3262 -7789.6436 8489.4063 C-7789.6919 8489.0977 -7789.4688 8489.1094 -7789.3584 8488.9033 C-7789.4355 8488.916 -7789.5449 8488.8223 -7789.5615 8488.9199 C-7789.4102 8488.7695 -7789.2578 8488.7461 -7789.0059 8488.7383 C-7789.1763 8488.8594 -7788.9131 8488.9297 -7788.9775 8489.0176 C-7788.9575 8488.7461 -7788.7168 8488.6621 -7788.4053 8488.7383 C-7788.1831 8489.0527 -7787.8208 8488.5361 -7787.46 8488.623 C-7787.6064 8488.8984 -7787.7935 8489.1191 -7788.0127 8489.2305 C-7787.7861 8489.3682 -7787.7607 8489.2227 -7787.5337 8489.3613 C-7787.4238 8489.1563 -7787.3457 8488.8418 -7787.0503 8488.7168 C-7787.0342 8488.9199 L-7786.7666 8488.8154 -7786.7666 8488.5146 -7786.4258 8488.5723 C-7785.8418 8488.6719 -7785.2407 8488.6719 -7784.7949 8488.6973 C-7784.7783 8488.8994 L-7784.5303 8488.4658 -7783.9521 8488.7393 -7783.6182 8488.5469 C-7783.0503 8488.7422 -7782.3848 8488.3535 -7782.0938 8488.7031 C-7781.0913 8488.5469 -7780.2148 8488.3945 -7779.1768 8488.4688 C-7779.3516 8488.7637 L-7779.1655 8488.5469 -7779.2305 8488.9336 -7779.0479 8488.8896 C-7779.2578 8488.6543 -7778.7949 8488.584 -7778.6665 8488.4033 C-7778.2041 8488.6328 -7777.6104 8488.3818 -7777.2007 8488.1758 C-7777.1846 8488.3789 L-7776.7705 8487.998 -7776.2759 8488.332 -7775.7598 8488.3945 C-7775.7007 8488.4785 -7775.6074 8488.6689 -7775.4536 8488.6465 C-7775.1738 8488.3184 -7775.0273 8488.3418 -7774.6167 8488.1367 C-7774.3169 8488.1367 -7773.8301 8488.2178 -7773.5254 8488.3457 C-7772.3975 8487.8848 -7771.2456 8488.1797 -7770.0732 8487.9023 C-7769.9888 8488.1406 L-7768.8521 8487.6309 -7767.4541 8488.0938 -7766.4839 8487.832 C-7766.5776 8488.2393 L-7766.2734 8488.3643 -7765.8843 8488.1328 -7765.9619 8487.8438 C-7765.6567 8487.9688 -7765.2007 8487.6465 -7765.0068 8487.9814 C-7764.6953 8488.0566 -7764.6255 8487.793 -7764.3662 8487.7383 C-7763.7422 8487.8926 -7763.5107 8487.8574 -7762.9224 8487.7813 C-7763.0684 8487.7559 L-7763.1328 8487.8457 -7763.1387 8488.0186 -7762.9922 8488.0449 C-7762.7725 8487.9307 -7762.1846 8488.1543 -7762.4033 8487.668 C-7761.7754 8487.9482 -7760.9385 8487.4395 -7760.3271 8487.8184 C-7760.3789 8487.6855 -7760.2246 8487.6602 -7760.1602 8487.5703 C-7759.6089 8487.5645 -7759.0293 8487.8359 -7758.5898 8487.6094 C-7758.5024 8487.6758 -7758.7295 8487.8359 -7758.5049 8487.8496 C-7758.3721 8487.7979 -7758.5024 8487.6758 -7758.3384 8487.6016 C-7757.4453 8487.3535 -7756.5303 8487.8574 -7755.7188 8487.793 C-7754.2754 8487.5361 -7752.7695 8487.666 -7751.3867 8487.623 C-7751.4023 8487.7207 L-7750.9395 8487.3477 -7750.3159 8488.1025 -7749.9463 8487.541 C-7749.8369 8487.6338 -7749.5283 8487.585 -7749.6094 8487.7734 C-7749.2407 8487.5098 -7748.5771 8488.0215 -7748.0439 8487.6865 C-7748.0928 8487.6777 -7748.1211 8487.6973 -7748.1777 8487.7393 C-7747.6392 8487.9551 -7747.1641 8487.6602 -7746.5957 8487.8555 C-7746.6533 8487.8975 -7746.7583 8487.9277 -7746.7754 8488.0254 C-7746.5557 8488.2129 -7746.2549 8487.6133 -7746.1348 8488.084 C-7746.0088 8488.0801 -7746.0449 8487.8477 -7746.1221 8487.8613 C-7744.8779 8488.0449 -7743.5498 8487.7441 -7742.2549 8487.6367 C-7741.3271 8487.918 -7742.1982 8488.4297 -7741.4663 8488.0781 C-7741.4063 8488.1689 -7741.4229 8487.8984 -7741.4131 8487.9961 C-7741.1299 8487.8643 -7740.9717 8488.5215 -7740.7754 8488.2754 C-7740.8564 8487.9863 -7740.6445 8488.1133 -7740.6387 8487.9375 C-7740.0713 8488.125 -7739.9575 8488.3857 -7739.5098 8488.166 C-7739.5435 8488.3184 L-7739.0186 8487.8887 -7738.4102 8488.1191 -7737.9673 8487.623 C-7735.0728 8487.5322 -7732.2983 8487.2578 -7729.4761 8487.2002 C-7726.6865 8487.2949 -7723.9551 8487.0723 -7721.1221 8487.3359 C-7720.4585 8487.7354 -7720.4087 8487.7246 -7719.6797 8487.5625 C-7719.7095 8487.627 -7719.7549 8487.6426 -7719.7061 8487.7031 C-7719.6699 8487.375 -7719.1929 8487.6719 -7719.1235 8487.3594 C-7718.0762 8487.4199 -7717.1113 8487.3301 -7716.0337 8487.3281 C-7716.2041 8487.3633 -7716.2896 8487.6309 -7716.0869 8487.6094 C-7715.8755 8487.3994 L-7715.8408 8487.4922 L-7715.7021 8487.4434 -7715.5513 8487.2813 -7715.6943 8487.1758 C-7712.9873 8486.8926 -7710.3242 8487.5498 -7707.6729 8487.4697 C-7707.0435 8487.6064 -7706.1475 8487.4814 -7705.4629 8487.4141 C-7703.4355 8487.8506 -7701.6079 8488.2041 -7699.5479 8487.8984 C-7699.8169 8488.7461 -7700.6675 8488.9414 Vf-7790.7578 8488.7422 m-7790.6855 8488.9063 -7790.4497 8488.9961 -7790.6377 8489.2139 C-7790.6611 8489.0605 -7790.7822 8488.8887 -7790.7578 8488.7422 Cf-7784.4619 8490.4297 m-7784.4536 8490.3809 -7784.3721 8490.4961 -7784.3521 8490.5225 C-7784.4297 8490.5352 -7784.5024 8490.6729 -7784.5645 8490.5879 C-7784.4854 8490.5762 -7784.4976 8490.498 -7784.4619 8490.4297 Cf-7782.8521 8490.5273 m-7782.8765 8490.6729 -7783.2207 8490.7891 -7783.4238 8490.8066 C-7782.8521 8490.5273 Lf-7781.3521 8491.1289 m-7781.2227 8491.252 -7781.2583 8491.3193 -7781.4326 8491.3154 C-7781.4453 8491.2383 -7781.3877 8491.1992 -7781.3521 8491.1289 Cf-7781.2456 8490.7969 m-7781.1211 8490.793 -7781.0591 8490.8789 -7780.9985 8490.9629 C-7781.0029 8490.8369 -7781.2871 8491.041 -7781.2456 8490.7969 Cf-7777.9893 8491.2207 m-7777.9111 8491.209 -7777.7417 8491.0879 -7777.6689 8491.25 C-7777.7505 8491.1367 -7778.0498 8491.4346 -7777.9893 8491.2207 Cf-7776.4761 8491 m-7776.4272 8491.0098 -7776.4072 8491.0361 -7776.3506 8490.9961 C-7776.2607 8491.0625 -7776.3555 8491.1689 -7776.4312 8491.1826 C-7776.4761 8491 Lf-7748.9287 8490.4141 m-7749.0923 8490.4863 L-7749.0684 8490.3418 L-7748.9287 8490.4141 Lf-7736.8574 8490.4063 m-7736.6943 8490.3145 -7736.7441 8490.543 -7736.7168 8490.5645 C-7736.8643 8490.5801 -7736.6621 8490.3848 -7736.8574 8490.4063 Cf-7730.3486 8489.6777 m-7730.3984 8489.6816 L-7730.3818 8489.3818 L-7730.3486 8489.6777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 3)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7791.5 8489.5273 m-7577.5361 8489.5273 L-7577.5361 8438.7266 L-7791.5 8438.7266 L-7791.5 8489.5273 Lnu0 R0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA1 J 3 w-7775.3838 8473.0879 m-7775.3838 8480.4658 l-7758.9268 8487.2832 l-7758.9268 8478.8281 lS1 Ap0 O0.019608 0.996078 0.976471 0 0.913725 0.109804 0.141176 Xa0 J-7783.1016 8462.9727 m-7783.1016 8467.2871 -7784.6455 8470.7842 -7786.5508 8470.7842 c-7788.4561 8470.7842 -7790 8467.2871 -7790 8462.9727 c-7790 8458.6582 -7788.4561 8455.1602 -7786.5508 8455.1602 c-7784.6455 8455.1602 -7783.1016 8458.6582 -7783.1016 8462.9727 cbu0 Ap0.145098 1 1 0.047059 0.784314 0.094118 0.121569 Xa1 w-7782.1484 8461.7461 m-7785.5508 8461.752 L-7788.9541 8461.7617 L-7788.9814 8462.1582 -7789 8462.5605 -7789 8462.9727 c-7789 8462.9766 -7789 8462.9785 -7789 8462.9824 C-7785.5508 8463.709 L-7782.1631 8464.4209 L-7739.1699 8473.4727 L-7739.1699 8461.6445 L-7782.1484 8461.7461 Lf0.019608 0.996078 0.976471 0 0.913725 0.109804 0.141176 Xa-7782.5439 8459.1504 m-7785.5508 8459.7969 L-7788.8213 8460.502 L-7788.8809 8460.9082 -7788.9248 8461.3301 -7788.9541 8461.7617 C-7785.5508 8461.752 L-7782.1484 8461.7461 L-7739.1699 8461.6445 L-7739.1699 8449.8047 L-7782.5439 8459.1504 Lf0.235294 1 1 0.180392 0.65098 0.078431 0.101961 Xa-7782.1631 8464.4209 m-7785.5508 8463.709 L-7789 8462.9824 L-7788.9971 8467.293 -7787.4551 8470.7842 -7785.5508 8470.7842 c-7785.0303 8470.7842 -7784.5391 8470.5176 -7784.0967 8470.0488 C-7739.1699 8485.7168 L-7739.1699 8473.4727 L-7782.1631 8464.4209 Lf0.003922 0.819608 0.588235 0 0.937255 0.333333 0.356863 Xa-7784.0547 8455.9414 m-7784.5078 8455.4453 -7785.0137 8455.1602 -7785.5508 8455.1602 c-7787.0742 8455.1602 -7788.3643 8457.3984 -7788.8213 8460.502 C-7785.5508 8459.7969 L-7782.5439 8459.1504 L-7739.1699 8449.8047 L-7739.1699 8440.2266 L-7784.0547 8455.9414 LfU1 Ap0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa0 R0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 XA3 w-7739.1699 8440.2266 m-7733.6235 8440.2266 -7729.1279 8450.4102 -7729.1279 8462.9727 c-7729.1279 8475.5352 -7733.6235 8485.7168 -7739.1699 8485.7168 c-7744.7158 8485.7168 -7749.2109 8475.5352 -7749.2109 8462.9727 c-7749.2109 8450.4102 -7744.7158 8440.2266 -7739.1699 8440.2266 cBu0 Ap0.666667 0 0.34902 0 0.25098 0.74902 0.713726 Xa1 w-7577.6758 8443.9697 m-7614.0205 8453.5303 -7685.8193 8439.2686 -7722.4155 8439.8994 C-7724.4775 8440.0723 -7725.5117 8440.1914 -7727.5742 8440.501 c-7729.6367 8440.8096 -7730.6675 8440.998 -7732.7295 8441.458 c-7734.7925 8441.917 -7735.8223 8442.1846 -7737.8848 8442.8105 c-7738.2021 8442.9063 -7738.7109 8443.0723 -7739.3154 8443.2754 c-7740.5088 8443.6738 -7742.0908 8444.2207 -7743.4268 8444.6865 C-7745.9072 8448.2354 -7747.8555 8454.8018 -7747.8555 8463.0322 c-7747.8555 8471.7031 -7745.6973 8478.5488 -7743.0283 8481.9434 C-7741.9346 8481.6641 -7740.4951 8481.3887 -7739.3154 8481.1309 c-7738.7529 8481.0098 -7738.2515 8480.8906 -7737.8848 8480.7793 c-7735.8223 8480.1553 -7734.7925 8479.8857 -7732.7295 8479.4258 c-7730.6675 8478.9658 -7729.6367 8478.7793 -7727.5742 8478.4697 c-7725.5117 8478.1602 -7724.4775 8478.042 -7722.4155 8477.8682 C-7685.8193 8477.2354 -7614.0205 8491.5 -7577.6758 8481.9395 C-7586.0762 8477.3857 -7590.2754 8474.2617 -7598.6758 8467.1738 C-7591.1045 8459.8818 -7584.3809 8452.0498 -7577.6758 8443.9697 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7791.5 8491.5 m-7567.7979 8491.5 L-7567.7979 8448.123 L-7791.5 8448.123 L-7791.5 8491.5 Lnu0 O0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa-7791.5 8491.5 m-7742.5986 8491.5 L-7749.1279 8488.708 L-7769.4326 8480.0273 L-7769.4326 8463.9482 L-7769.4326 8461.3193 L-7791.5 8461.3193 L-7788.9033 8463.9482 L-7775.9404 8477.0674 L-7788.7705 8488.708 L-7791.5 8491.5 Lf0.623529 0.85098 0 0 0.47451 0.278431 0.623529 Xa-7769.4316 8448.123 m-7769.4316 8451.3506 L-7769.4316 8476.5449 L-7769.4316 8480.0273 L-7589.8662 8480.0273 L-7589.8662 8476.5449 L-7589.8662 8451.3506 L-7589.8662 8448.123 L-7769.4316 8448.123 Lf0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa-7583.3584 8477.0674 m-7570.3965 8463.9482 L-7567.7979 8461.3193 L-7589.8662 8461.3193 L-7589.8662 8463.9482 L-7589.8662 8480.0273 L-7610.1709 8488.708 L-7616.7002 8491.5 L-7567.7979 8491.5 L-7570.5283 8488.708 L-7583.3584 8477.0674 Lf-7742.5986 8491.5 m-7769.4326 8480.0273 LNu0 O0.85098 1 0.262745 0.160784 0.286275 0.12549 0.407843 Xa-7597.0215 8480.0273 m-7616.7002 8480.0273 L-7616.7002 8488.4395 L-7616.7002 8491.5 L-7589.8662 8480.0273 L-7597.0215 8480.0273 Lf-7769.4326 8480.0273 m-7742.5986 8491.5 L-7742.5986 8488.4395 L-7742.5986 8480.0273 L-7762.2764 8480.0273 L-7769.4326 8480.0273 LfUUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 3 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe Calligr) -(aphic Brush Tool/ 3 pt. Round/ Adobe Calligraphic Brush Tool/ ) -(7 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe ArtOn) -(Path Brush Tool/ Pencil - Thin/ Adobe ArtOnPath Brush Tool/ Ba) -(nner 1/ Adobe ArtOnPath Brush Tool/ Banner 2/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Flat)(1 3 3 9 9 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner 1)(1 / Unnamed Brush Pat 5/ / / / / 5 0.47451 0.278431 0.623529 /) -(  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner 2)(1 / Unnamed Brush Pat 3/ / / / / 5 0.25098 0.74902 0.713726 / ) -( 1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 2/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Pencil - Thin)(1 / Unnamed 18/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.74902 0.678431 0.670588 0.901961 0 0 0 Xa(Black)Pc0 0.992157 1 0 1 0 0 Xa(RGB Red)Pc0.062745 0 0.964706 0 1 1 0 Xa(RGB Yellow)Pc0.627451 0 1 0 0 1 0 Xa(RGB Green)Pc0.517647 0 0.12549 0 0 1 1 Xa(RGB Cyan)Pc0.882353 0.768627 0 0 0 0 1 Xa(RGB Blue)Pc0.270588 0.815686 0 0 1 0 1 Xa(RGB Magenta)Pc0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.87451 0.52549 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 1)PcBb0 0 0 0 Bh2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 1)PcBb2 (Red Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Red Linear Gradient)PcBb2 (Gray Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Gray Linear Gradient)PcBb0 0 0 0 Bh2 (Purple Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Purple Radial Gradient)Pc(Checked Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Checked Pattern)Pc0.007843 0.992157 0.972549 0 0.92549 0.109804 0.141176 Xa(R=236 G=28 B=36)Pc0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.486274 0.364706 0.337255 0.015686 0.545098 0.572549 0.596078 Xa(R=139 G=146 B=152 1)Pc0 g(K=100)Pc0.1 g(K=90)Pc0.2 g(K=80)Pc0.3 g(K=70)Pc0.4 g(K=60)Pc0.5 g(K=50)Pc0.6 g(K=40)Pc0.7 g(K=30)Pc0.8 g(K=20)Pc0.9 g(K=10)Pc0.95 g(K=5)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au*u0 O0 g0 J 0 j 1 w 4 M []0 d0 XR316.9551 360.353 m324.6411 360.353 331.1836 357.6704 336.5806 352.3062 c339.1641 349.7222 341.1265 346.77 342.4683 343.4502 c343.8091 340.1299 344.48 336.606 344.48 332.877 c344.48 329.1152 343.8174 325.5913 342.4927 322.3037 c341.168 319.0166 339.2129 316.1133 336.6294 313.5952 c333.9473 310.9458 330.9053 308.917 327.5039 307.5112 c324.1016 306.1045 320.5859 305.4014 316.9551 305.4014 c313.3242 305.4014 309.8486 306.0957 306.5288 307.4868 c303.2085 308.8765 300.2319 310.8882 297.5991 313.5215 c294.9658 316.1538 292.9629 319.1226 291.5889 322.4263 c290.2153 325.73 289.5283 329.2134 289.5283 332.877 c289.5283 336.5078 290.2227 339.999 291.6138 343.3521 c293.0034 346.7046 295.0234 349.7061 297.6729 352.3555 c302.9058 357.6865 309.333 360.353 316.9551 360.353 cf1 D317.0532 355.3975 m310.7729 355.3975 305.4902 353.2056 301.2056 348.8228 c299.0469 346.6309 297.3862 344.1694 296.2256 341.4385 c295.064 338.707 294.4839 335.853 294.4839 332.877 c294.4839 329.9331 295.064 327.0952 296.2256 324.3647 c297.3862 321.6328 299.0469 319.1958 301.2056 317.0542 c303.3643 314.9111 305.8008 313.2759 308.5161 312.1475 c311.2305 311.019 314.0762 310.4551 317.0532 310.4551 c319.9971 310.4551 322.8501 311.0269 325.6147 312.1724 c328.3784 313.3169 330.8721 314.9688 333.0972 317.1274 c337.3818 321.314 339.5244 326.564 339.5244 332.877 c339.5244 335.9189 338.9678 338.7969 337.856 341.5122 c336.7437 344.2271 335.1245 346.647 332.999 348.7739 c328.583 353.1895 323.2676 355.3975 317.0532 355.3975 cf0 D316.7095 337.4399 m313.0298 335.5264 L312.6372 336.3438 312.1543 336.9165 311.5825 337.2437 c311.0098 337.5703 310.4785 337.7344 309.9878 337.7344 c307.5347 337.7344 306.3081 336.1152 306.3081 332.877 c306.3081 331.4053 306.6187 330.2275 307.2402 329.3447 c307.8613 328.4614 308.7773 328.0195 309.9878 328.0195 c311.5903 328.0195 312.7188 328.8047 313.3735 330.375 c316.7588 328.6577 L316.0391 327.3159 315.0415 326.2612 313.7656 325.4932 c312.4902 324.7241 311.0835 324.3398 309.5464 324.3398 c307.0933 324.3398 305.1138 325.0923 303.6099 326.5967 c302.105 328.1011 301.3525 330.1948 301.3525 332.877 c301.3525 335.4937 302.1133 337.5703 303.6343 339.1084 c305.1553 340.6455 307.0762 341.4141 309.3989 341.4141 c312.8008 341.4141 315.2378 340.0894 316.7095 337.4399 cf332.5571 337.4399 m328.9268 335.5264 L328.5342 336.3438 328.0513 336.9165 327.479 337.2437 c326.9063 337.5703 326.3584 337.7344 325.8354 337.7344 c323.3823 337.7344 322.1558 336.1152 322.1558 332.877 c322.1558 331.4053 322.4663 330.2275 323.0879 329.3447 c323.709 328.4614 324.625 328.0195 325.8354 328.0195 c327.438 328.0195 328.5664 328.8047 329.2207 330.375 c332.6553 328.6577 L331.9023 327.3159 330.8892 326.2612 329.6133 325.4932 c328.3379 324.7241 326.9473 324.3398 325.4429 324.3398 c322.957 324.3398 320.9697 325.0923 319.4819 326.5967 c317.9932 328.1011 317.2495 330.1948 317.2495 332.877 c317.2495 335.4937 318.0098 337.5703 319.5308 339.1084 c321.0518 340.6455 322.9731 341.4141 325.2959 341.4141 c328.6973 341.4141 331.1177 340.0894 332.5571 337.4399 cf*UULB%AI5_EndLayer--%AI3_BeginCropsuserdict /AI3_noCropMarks known not {0 Auu0 R1 1 1 1 ([Registration]) 0 XS0 J 0 j 0.5 w 4 M []0 d0 XR275 299.457 m248 299.457 LS284 290.457 m284 263.457 LSUu275 365.457 m248 365.457 LS284 374.457 m284 401.457 LSUu359 365.457 m386 365.457 LS350 374.457 m350 401.457 LSUu359 299.457 m386 299.457 LS350 290.457 m350 263.457 LSUU} if%AI3_EndCrops%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF