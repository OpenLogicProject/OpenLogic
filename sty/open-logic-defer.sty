% OpenLogic Project
% Package for deferring processing of environments

% This is a hack using the answers package.
% A clean solution is needed

\NeedsTeXFormat{LaTeX2e}

\ProvidesFile{open-logic-defer.sty}

\RequirePackage{etoolbox}
\RequirePackage{answers}

% write problems to \oljobname.prb

\def\solutionextension{prb}

\makeatletter

% Undefine the prob and probtag environments

\csundef{prob}
\csundef{endprob}
\csundef{probtag}
\csundef{endprobtag}

% Instead, make them into environments which write probdeferred and
% probdeferredtag environments to the problem file using answers.sty

\Newassociation{prob}{probdeferred}{\jobname}
\Newassociation{probtag}{probdeferredtag}{\jobname}

\newcommand*{\olprobsavefileid}{\Writetofile{\jobname}{\string\olfileid{\theolpart}{\theolchapter}{\theolsection}}}

% every prob environment, execute \ifproblems\ifproblemswrite

\pretocmd{\prob}{\olprobsavefileid\ifproblems\ifproblemswrite}{}{}
\pretocmd{\probtag}{\olprobsavefileid\ifproblems\ifproblemswrite}{}{}

% probdeferred and probdeferredtag are just wrappers for theorem
% environments which do the actual typesetting.  answers.sty writes
% the number of the problem into the .prb file, but we throw them away
% and just count them separately. It also throws away the tags. This
% is a bug; actually probtag should deal with the tags but this
% requires hacking answers.sty code.

\renewenvironment{probdeferred}[1]{\begin{probd}}{\end{probd}}
\renewenvironment{probdeferredtag}[2]{\begin{probd}}{\end{probd}}

% the probd environment does the actual typesetting.

\declaretheorem[
  style=definition, numbered=yes,
  name={Problem}]{probd}

% \probch holds the chapter number

\newcommand*{\probch}{0}

% Print the chapter number with the problem number

\renewcommand*{\theprobd}{\probch.\arabic{probd}}
\renewcommand{\theHprobd}{\probch.\arabic{probd}}


% make sure the .prb file is open
\Opensolutionfile{\jobname}

% for problems per chapter, we want \ifproblems to be
% \makeifproblemsprint at the beginning of each chapter. If there are
% no problems in the chapter, it isn't called and so \ifproblems is
% not redefined. In the end-of-chapter hook it will gobble its
% argument if there were no problems.

\def\makeifproblemsprint#1{\global\let\ifproblems\relax}

% for collected problems, we want \ifproblems to be
% \makeifproblemsgobble at the beginning of a chapter. The first prob
% environment will call it and execute its argument \ifproblemwrite,
% which writes ``Problems for Chapter \thechapter'' into the problems
% file, and then redefine \ifproblem to be \@gobble. Subsequent probs
% in the chapter will then gobble the argument \ifproblemwrite and so
% only one heading is written per chapter.

\def\makeifproblemsgobble#1{#1\global\let\ifproblems\@gobble}

% - `\problemsperchapter`: execute this in the preamble to print the
% - problem file at the end of every chapter

\newcommand{\problemsperchapter}{% 
  % after each chapter command, open the .prb file and write a section
  % header into it
  \let\ifproblems\makeifproblemsprint
  \let\ifproblemswrite\relax
  \renewcommand{\memendofchapterhook}{%
    \Closesolutionfile{\jobname}
    \Opensolutionfile{\jobname}
    \Writetofile{\jobname}{%
      \string\renewcommand*{\string\probch}{\thechapter}
      \string\setcounter{probd}{0}}
    \let\ifproblems\makeifproblemsprint}
    % at the end of every chapter, close the .prb file and print it
  \appto\OLEndChapterHook{%
    \Closesolutionfile{\jobname}
    \renewcommand*{\probch}{\thechapter}
    \ifproblems{% print problems if there are any
      \section*{Problems}
      \addcontentsline{toc}{section}{Problems}
      \Readsolutionfile{\jobname}}}}

% - `\collectproblems`: execute this in the preamble to arrange for
% the printing of problems explicitly, e.g., at the end of the book

\def\nobreak{\penalty\@M} % needed to fix problem with answers.sty

\newcommand{\collectproblems}{%
  % at the end of every \chapter command, write a section header into
  % the .prb file and reset counters
  \let\ifproblems\makeifproblemsgobble
  \def\ifproblemswrite{%
      \Writetofile{\jobname}{%
        \string\section*{Problems for Chapter~\thechapter}}}
  \renewcommand\memendofchapterhook{%
    \let\ifproblems\makeifproblemsgobble
    \Writetofile{\jobname}{
      \string\renewcommand*{\string\probch}{\thechapter}
      \string\setcounter{probd}{0}}}}

% \collectproblems is the default, so we execute it right away

\collectproblems

% - `\stopproblems`: execute at the end of the mainmatter, to stop
% chapter commands from writing to the .prb file

\newcommand{\stopproblems}{%
  \renewcommand\memendofchapterhook{}}

% - `\printproblems`: closes problem file and prints problems.

\newcommand{\printproblems}{%
  \Closesolutionfile{\jobname}
  \Readsolutionfile{\jobname}}

\makeatother

