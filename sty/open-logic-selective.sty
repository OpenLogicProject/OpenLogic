% OpenLogic Project
% Package for selective typesetting

% cribbed from tagging.sty package by Brent Longborough
% http://www.ctan.org/tex-archive/macros/latex/contrib/tagging 

% uses etoolbox's toggles for tags instead, allows for boolean
% expressions in addition to tag lists

\NeedsTeXFormat{LaTeX2e}
\ProvidesFile{open-logic-selective.sty}

\RequirePackage{etoolbox}
\RequirePackage{xpunctuate} % for xcomma, xperiod


\makeatletter

% initialize a list of tags as true

\newcommand{\tagtrue}[1]{%
  \def\do##1{\providetoggle{##1}\toggletrue{##1}}
    \docsvlist{#1}%
  \def\do##1{\providetoggle{not##1}\togglefalse{not##1}}
    \docsvlist{#1}%
}

% initialize a list of tags as false

\newcommand{\tagfalse}[1]{%
  \def\do##1{\providetoggle{##1}\togglefalse{##1}}%
    \docsvlist{#1}%
\def\do##1{\providetoggle{not##1}\toggletrue{not##1}}
    \docsvlist{#1}}

% tagcount -- count number of active tags in a tag list

\newcounter{tagnum}

\newcommand{\tagcount}[1]{%
  \setcounter{tagnum}{0}
  \def\do##1{\iftoggle{##1}{\stepcounter{tagnum}}{}}%
    \docsvlist{#1}}

% \iftag{tags}{text if tagged}{text if not tagged}

\newcommand{\iftagtext}{}
\newcommand{\iftag}[3]
  {\def\iftagtext{#3}%
   \def\do##1{%
     \iftoggle{##1}{\def\iftagtext{#2}}{}}%
   \docsvlist{#1}%
   \iftagtext}

% \tagrefs - output a list depending on tags.
\def\startcsvcomma{\def\csvcomma{}}
\def\tagpair#1/#2{\iftoggle{#1}{\edef\taglist@result{\taglist@result\csvcomma
      #2}\def\csvcomma{,,}}{}}
  
\newcommand{\tagrefs}[1]{\startcsvcomma%
  \def\taglist@input{#1}%
  \def\taglist@result{}%
  \def\do##1{\tagpair##1}%
  \docsvlist{#1}\cref{\taglist@result}}
  
  
% change \begin to take optional tags in <...>
% if one of the tags is active, behave as \begin otherwise would
% if one of them is, supress everything until the end of the environment

\let\orig@begin\begin

\def\begin{\@ifnextchar<{\tag@begin}{\orig@begin}}
\def\tag@begin<#1>{\iftag{#1}\orig@begin\supressenv}

\def\supressenv#1{\begingroup\@bsphack
             \let\do\@makeother\dospecials\catcode`\^^M\active
             \let\verbatim@startline\relax
             \let\verbatim@addtoline\@gobble
             \let\verbatim@processline\relax
             \let\verbatim@finish\relax
             \def\@currenvir{#1}%
             \verbatim@}

% \excludeenv -- make the specified environment into a comment environment
% \includeenv -- restore a previously excluded environment

\def\excludeenv#1{%
  \expandafter\let\csname orig@#1\expandafter
  \endcsname\csname #1\endcsname
  \expandafter\let\csname orig@end#1\expandafter
  \endcsname\csname end#1\endcsname
  \expandafter\def\csname #1\endcsname{\supressenv{#1}}
  \expandafter\let\csname end#1\endcsname\endgroup}
\def\includeenv#1{%
  \expandafter\let\csname #1\expandafter
  \endcsname\csname orig@#1\endcsname
  \expandafter\let\csname end#1\expandafter
  \endcsname\csname orig@end#1\endcsname}

% \tagitem<tags><tagged text><untagged text>: typeset an \item if tags active

\newcommand{\tagitem}[3]{\iftag{#1}{%
    \expandafter\ifstrempty{#2}{}{\item #2}}{
    \expandafter\ifstrempty{#3}{}{\item #3}}}

% \begin{tagenumerate}{tags} -- like enumerate, but only if more than
% one tag is active

\newenvironment{tagenumerate}[1]{%
  \tagcount{#1}%
  \ifnumgreater{\value{tagnum}}{1}{%
    \begin{enumerate}}{%
    \let\orig@tagitem\tagitem
    \let\orig@item\item
    \let\tagitem\iftag
    \let\item\relax}}{%
  \ifnumgreater{\value{tagnum}}{1}{%
    \end{enumerate}}{%
    \let\tagitem\orig@tagitem
    \let\item\orig@item}}

\def\startycommalist{\def\ycomma{\def\ycomma{, }}}

\def\saveprob{\global\let\oldprob\prob
  \global\let\oldendprob\endprob}
\def\killprob{\global\let\prob\comment
  \global\let\endprob\endcomment}
\def\restoreprob{\global\let\prob\oldprob
  \global\let\endprob\oldendprob}

\newcommand{\tagprob}[2][tagTrue]{\saveprob\iftag{#1}{\iftag{#2}{}{\killprob}}{\killprob}}
\newcommand{\tagendprob}{\restoreprob}

\makeatother

